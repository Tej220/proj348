#Partition data
train.index <- sample(c(1:dim(organics.df)[1]), dim(organics.df)[1]*0.6)
train.df <- organics.df[train.index, ]
valid.df <- organics.df[-train.index, ]

#Data Summary
summary(organics.df)

#Replacing Numeric N/A Values With Mean Values From Non-missing Data.
organics.df$DemAge[is.na(organics.df$DemAge)] <- round(mean(organics.df$DemAge, na.rm = TRUE), 3)
organics.df$DemAffl[is.na(organics.df$DemAffl)] <- round(mean(organics.df$DemAffl, na.rm = TRUE), 3)
organics.df$DemCluster[is.na(organics.df$DemCluster)] <- round(mean(organics.df$DemCluster, na.rm = TRUE), 3)
organics.df$PromTime[is.na(organics.df$PromTime)] <- round(mean(organics.df$PromTime, na.rm = TRUE), 3)
organics.df$PromSpend[is.na(organics.df$PromSpend)] <- round(mean(organics.df$PromSpend, na.rm = TRUE), 3)


#Replacing Categorical N/A Values with Common Values From Non-missing Data
organics.df$DemClusterGroup[organics.df$DemClusterGroup == ""] <-  "C"
organics.df$DemGender[organics.df$DemGender == ""] <- "F"
organics.df$DemReg[organics.df$DemReg == ""] <- "South East"
organics.df$DemTVReg[organics.df$DemTVReg == ""] <- "London"
organics.df$PromClass[organics.df$PromClass == ""] <- "Silver"

# normailize the data
#normalize the data
train.norm.df <- train.df
valid.norm.df <- valid.df
organics.norm.df <- organics.df

norm.values <- preProcess(train.df[, c(2,3,4,10,11)], method=c("center", "scale"))
train.norm.df[, c(2,3,4,10,11)] <- predict(norm.values, train.df[, c(2,3,4,10,11)])
valid.norm.df[, c(2,3,4,10,11)] <- predict(norm.values, valid.df[, c(2,3,4,10,11)])
organics.norm.df[, c(2,3,4,10,11)] <- predict(norm.values, organics.df[, c(2,3,4,10,11)])

#KNN

targetbuy.knn <- knn(train=train.norm.df[,c(2,3,4,10,11)], test = valid.norm.df[,c(2,3,4,10,11)], cl = train.norm.df[, 12], k = 12)

attr(targetbuy.knn, "nn.index")
row.names(organics.df)[attr(targetbuy.knn, "nn.index")]
attr(targetbuy.knn, "nn.dist")

#Accuracy
confusionMatrix(as.factor(targetbuy.knn), as.factor(valid.norm.df[,6]))
